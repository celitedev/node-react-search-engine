---
# Git
git_version: 2.9.0


# Node.JS
nodejs_version: "6.x"
npm_enabled: yes
npm_packages:
  - name: npm
    version: 3.8.6
  - name: webpack
  - name: webpack-dev-server
  - name: babel-cli
  - name: eslint
  - name: horizon
  - name: bower


### Domains ###
site_domain: 'ec2-107-21-81-118.compute-1.amazonaws.com'


### Options ###
skip_checkout: no
force_upgrade: no


### Deploy ###
deploy_app_name: 'kwhen'
deploy_env: staging
deploy_user: "{{ ansible_user_fix }}"           # Set deploy user
deploy_group: "{{ deploy_user }}"               # Set deploy group

deploy_prefix: "/home/{{ deploy_user }}"
deploy_dir: "{{ deploy_prefix }}/{{ deploy_app_name }}" # Main directory for deploiment
deploy_etc_dir: "{{ deploy_dir }}/etc"          # Directory where placed configuration files
deploy_log_dir: "{{ deploy_dir }}/log"          # Directory where placed logs
deploy_run_dir: "{{ deploy_dir }}/run"          # Directory where placed unix sockets and pid files
deploy_src_dir: "{{ deploy_dir }}/src"          # Source's directory
deploy_bin_dir: "{{ deploy_dir }}/bin"          # Directory where placed scripts
deploy_dir_skip: []


# Site
site_src_dir: '{{ deploy_src_dir }}'
site_repo: 'git@github.com:Kwhen/collections.git'
site_repo_branch: 'master'


### Apt ###
apt_enabled: yes  # Enable the role
apt_default_packages: # List of packages which will be installed
  - command-not-found
  - curl
  - htop
  - iftop
  - iotop
  - mercurial
  - nmap
  - pciutils
  - screen
  - sysstat
  - vim
  - wget
  - ack-grep
  - dstat
  - mosh
  - pciutils
  - unzip
  - p7zip-full
apt_packages: # Set list of additional packages which will be installed
  - libcurl4-openssl-dev
  - libffi-dev
  - libssl-dev


### NTP ###
ntp_timezone: UTC


frontend_host: localhost
frontend_port: 7000


# SSL
ssl_enabled: yes
ssl_certificate: '{{ deploy_src_dir }}/horizon-cert.pem'
ssl_certificate_key: '{{ deploy_src_dir }}/horizon-key.pem'


### NGINX ###
nginx_user: "{{ deploy_user }}"
nginx_conf_dir: "/etc/nginx"
nginx_max_clients: 512
nginx_sites:
  kwhen:
    - |
      {% if ssl_enabled %}
      listen 443 ssl;
      {% else %}
      listen 80;
      {% endif %}

      server_name {{ site_domain }};

      charset utf-8;
      server_tokens off;


      {% if ssl_enabled %}
      ssl_certificate {{ ssl_certificate }};
      ssl_certificate_key {{ ssl_certificate_key }};
      {% endif %}

      access_log {{ deploy_log_dir }}/nginx-api-access.log;
      error_log {{ deploy_log_dir }}/nginx-api-error.log;

      expires modified -1d;

      client_max_body_size 75M; # Max upload size
      gzip on;

      location / {
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Connection "";
        proxy_http_version 1.1;


        proxy_pass https://{{ deploy_app_name }}_nodejs;
      }

  www_redirect:
    - |
      server_name www.{{ site_domain }};

      {% if ssl_enabled %}
        ssl_certificate {{ ssl_certificate }};
        ssl_certificate_key {{ ssl_certificate_key }};
      {% endif %}

      listen *:80;

      {% if ssl_enabled %}
        listen *:443 ssl;
      {% endif %}

      {% if ssl_enabled %}
        return 301 https://{{ site_domain }}$request_uri;
      {% else %}
        return 301 $scheme://{{ site_domain }}$request_uri;
      {% endif %}

  non_encrypted_redirect:
    - |
      server_name {{ site_domain }};

      listen *:80;

      return 301 https://{{ site_domain }}$request_uri;

nginx_remove_sites: []

nginx_configs:
  gzip:
    - |
      gzip on;
      gzip_disable "msie6";
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_min_length 1000;
      gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg image/x-icon image/bmp;
  upstream:
    - |
      upstream {{ deploy_app_name }}_nodejs  {
        server {{ frontend_host }}:{{ frontend_port }};
        keepalive 64;
      }
